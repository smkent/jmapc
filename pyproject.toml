[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "jmapc"
version = "0.0.0"
description = "JMAP client library for Python"
license = "GPL-3.0-or-later"
authors = ["Stephen Kent <smkent@smkent.net>"]
readme = "README.md"
repository = "https://github.com/smkent/jmapc"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Operating System :: OS Independent",
    "Topic :: Communications :: Email :: Post-Office",
    "Topic :: Office/Business :: Groupware",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
include = [
    "examples",
]

[tool.poetry.dependencies]
python = "^3.8"
dataclasses-json = "^0.5.6"
python-dateutil = "^2.8.2"
requests = "^2.27.1"
sseclient = "^0.0.27"
mkdocs-material = "^8.4.0"
mkdocstrings = {extras = ["python"], version = "^0.19.0"}

[tool.poetry.dev-dependencies]
black = "*"
flake8 = "*"
isort = "*"
mypy = "*"
poethepoet = "^0.12.3"
pytest = "*"
pytest-cov = "*"
pytest-sugar = "*"
tox = "*"
types-python-dateutil = "^2.8.9"
types-requests = "^2.27.11"
responses = "^0.18.0"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poe.tasks]
lt = ["lint", "test"]

lint = ["isort_lint", "black_lint"]
black_lint = { cmd = "black -l 79 -- tests/ examples/ jmapc/" }
isort_lint = { cmd = "isort -- tests/ examples/ jmapc/" }

test = ["flake8", "isort", "black", "mypy", "pytest"]
black = { cmd = "black -l 79 --check --diff --color -- tests/ examples/ jmapc/" }
isort = { cmd = "isort --check-only -- tests/ examples/ jmapc/" }
flake8 = { cmd = "flake8" }
mypy = { cmd = "mypy" }
pytest = { cmd = "pytest" }

[tool.coverage.run]
source = ["jmapc"]

[tool.coverage.report]
fail_under = 95
show_missing = true

[tool.isort]
atomic = true
profile = "black"
line_length = 79

[tool.mypy]
files = [ "tests", "jmapc" ]
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--cov --cov-append --cov-report term --cov-report xml:coverage.xml"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310
isolated_build = True
requires =
    tox-poetry-installer[poetry] == 0.6.0

[testenv]
deps =
    poetry
commands =
    poetry install
    poetry run poe test

[gh-actions]
python =
    3.10: py310
"""

# vim: ft=cfg
